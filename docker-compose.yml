version: '3.8'
services:
  application:
    container_name: main_nest_application
    image: watchzone:latest
    restart: always
    command: dev
    ports:
      - 3000:3000

    depends_on:
      - database
    networks:
      - app_network
  database:
    container_name: pg_container
    image: postgres
    volumes:
      - ./data/database:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'pg_isready',
          '-U',
          'supertoken_user',
          '-d',
          'supertokens'
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - app_network
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:6.0
    depends_on:
      database:
        condition: service_healthy
    ports:
      - 3567:3567
    env_file:
      - .env
    networks:
      - app_network
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  cache:
    image: redis:6
    networks:
      - app_network

  directus:
    image: directus/directus:latest
    ports:
      - 8055:8055
    volumes:
      - ./uploads:/directus/uploads
    depends_on:
      - cache
      - database
    networks:
      - app_network
    env_file:
      - .env
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    env_file:
      - .env
    ports:
      - "5050:80"
    networks:
      - app_network
networks:
  app_network:
    driver: bridge
